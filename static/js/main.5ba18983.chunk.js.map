{"version":3,"sources":["components/DropDownComponent/DropDownList/DropDownList.jsx","components/DropDownComponent/DropDownBlock/DropDownBlock.jsx","components/DropDownComponent/DropDownComponent.jsx","App.js","index.js"],"names":["DropDownList","props","className","list","map","item","key","id","selectedList","includes","onFocus","e","target","focus","ref","number","item_ref","tabIndex","onClick","inputEl","current","addItem","title","DropDownBlock","el","onDelete","onKeyDown","keyCode","setIsVisible","value","onChange","setValue","type","onSetIsVisible","DropDownComponent","useState","isVisible","setSelectedList","items","setList","setNumber","useRef","addToSelected","prevState","useEffect","filter","toLowerCase","setTabIndex","find","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ba18983.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DropDownList = (props) => {\r\n\r\n    const addToSelectedList = (e) => {\r\n        props.inputEl.current.focus()\r\n        props.addItem(e)\r\n    }\r\n\r\n    return (\r\n        <ul className='content'>\r\n            {props.list.map(item => {\r\n                return (\r\n                    <div key={item.id}>\r\n                        {\r\n                            !props.selectedList.includes(item) &&\r\n                            <li onFocus={(e) => e.target.focus()} id={item.id}\r\n                                ref={item.id === props.number ? props.item_ref : null} tabIndex={item.id}\r\n                                className={'item'} onClick={() => addToSelectedList(item)}>{item.title}</li>\r\n                        }\r\n                    </div>\r\n                )\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default DropDownList;\r\n","import React from 'react';\r\n\r\nconst DropDownBlock = (props) => {\r\n\r\n    const onChange = (e) => {\r\n        props.setIsVisible(true)\r\n        props.setValue(e.target.value)\r\n    }\r\n\r\n    const onKeyDown = (e) => {\r\n        if (e.keyCode === 27) {\r\n            props.setIsVisible(false)\r\n        }\r\n    }\r\n    const onDelete = (id) => {\r\n        props.onDelete(id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"items\">\r\n                {props.selectedList.map((el) => {\r\n                    return (\r\n                        <div key={el.id} className={\"selected_items_block\"}>\r\n                            <span className=\"selected-item\">{el.title} </span>\r\n                            <span onClick={() => onDelete(el.id)} className='delete'> x</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"dropdown-menu-input_block\">\r\n                <input ref={props.inputEl} onKeyDown={onKeyDown} onFocus={() => props.setIsVisible(true)}\r\n                       value={props.value} onChange={onChange} className=\"dropdown-menu-input\" type=\"text\"/>\r\n                <div onClick={props.onSetIsVisible} className=\"add\">+</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DropDownBlock;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport items from '../../items'\r\nimport DropDownList from \"./DropDownList/DropDownList\";\r\nimport DropDownBlock from \"./DropDownBlock/DropDownBlock\";\r\n\r\nfunction DropDownComponent(props) {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const [selectedList, setSelectedList] = useState([])\r\n    const [value, setValue] = useState('')\r\n    const [list, setList] = useState([...items.items])\r\n    const [number, setNumber] = useState(1)\r\n    const inputEl = useRef()\r\n    const item = useRef()\r\n    const onSetIsVisible = () => {\r\n        setIsVisible(prevState => !prevState)\r\n    }\r\n\r\n    const addToSelected = (e) => {\r\n        setSelectedList(prevState => [...prevState, e])\r\n    }\r\n    useEffect(() => {\r\n        setList(items.items.filter(item => item.title.toLowerCase().includes(value.toLowerCase())))\r\n    }, [value])\r\n\r\n    const setTabIndex = (e) => {\r\n        switch (e.keyCode) {\r\n            case 40:setNumber(prevState => prevState + 1);break;\r\n            case 38: setNumber(prevState => prevState - 1);break;\r\n            case 13:addToSelected(list.find((el) => el.id === item.current.tabIndex));break;\r\n            default:break;\r\n        }\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        setSelectedList(prevState => prevState.filter((el) => el.id !== id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (item.current) {\r\n            item.current.focus()\r\n        }\r\n    }, [number])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div onKeyDown={setTabIndex}>\r\n                <DropDownBlock onDelete={onDelete} setTabIndex={setTabIndex} item={item} inputEl={inputEl} value={value}\r\n                               setValue={setValue}\r\n                               setIsVisible={setIsVisible} selectedList={selectedList} onSetIsVisible={onSetIsVisible}/>\r\n                {isVisible &&\r\n                <DropDownList number={number} setTabIndex={setTabIndex} item_ref={item} inputEl={inputEl} list={list}\r\n                              value={value} selectedList={selectedList} addItem={addToSelected} items={items}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropDownComponent;\r\n","import React from 'react';\nimport './App.css'\n\nimport DropDownComponent from \"./components/DropDownComponent/DropDownComponent\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <DropDownComponent/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}